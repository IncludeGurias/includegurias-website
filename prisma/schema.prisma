// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model IncludeInfo {
  id    Int    @id @default(autoincrement())
  name  String
  value String
}

model Material {
  id          Int     @id @default(autoincrement())
  title       String  @unique
  description String
  isNew       Boolean @default(false)
  imageUrl    String
  href        String
}

model News {
  id             Int      @id @default(autoincrement())
  title          String
  text           String
  imageUrl       String
  date           String?
  href           String?
  showInTimeline Boolean  @default(false)
}

model Partners {
  id       Int     @id @default(autoincrement())
  name     String
  imageUrl String
  href     String?
  active   Boolean @default(true)
}

model PrimaryPageVideos {
  id       Int    @id @default(autoincrement())
  title    String
  videoUrl String
}

model ScholarshipMember {
  id       Int     @id @default(autoincrement())
  imageUrl String?
  name     String
}

model SocialMedia {
  id   Int    @id @default(autoincrement())
  name String
  href String
}

model PrimaryPageSocialMediaPosts {
  id             Int      @id @default(autoincrement())
  text           String
  name           String
  subname        String
  imageUrl       String
  href           String?
  date           String?
  showInTimeline Boolean  @default(false)
  socialMedia    String
}

model TeamMember {
  id       Int     @id @default(autoincrement())
  name     String
  job      String?
  imageUrl String?
  href     String?
}

model Testimonial {
  id            Int     @id @default(autoincrement())
  name          String
  sublegend     String
  sublegendHref String
  color         String
  avatar        String?
  testimonial   String
}

model OldMember {
  id       Int     @id @default(autoincrement())
  name     String
  job      String?
  imageUrl String?
}

model Guria {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  birthplace String
  birthdate  String
  deathdate  String?
  bio        String
  job        String
  imageUrl   String?
  GuriaTags  GuriaTags[]
}

model Tag {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  GuriaTags  GuriaTags[]
}

model GuriaTags {
  id      Int   @id @default(autoincrement())
  guriaId Int
  tagId   Int
  guria   Guria @relation(fields: [guriaId], references: [id], onDelete: Cascade)
  tag     Tag   @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([guriaId, tagId])
}
